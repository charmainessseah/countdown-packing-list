{"version":3,"sources":["Header.js","SetName.js","Countdown.js","PackingList.js","App.js","index.js"],"names":["Home","name","className","SetName","setName","value","type","placeholder","onChange","e","currentTarget","localStorage","setItem","Countdown","tripDate","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","useEffect","interval","setInterval","timeNow","Date","getTime","timeDifference","getItem","Math","floor","clearInterval","PackingList","packingList","thing","id","Number","packed","item","list","setList","handleClick","console","log","preventDefault","itemID","updatedList","filter","JSON","stringify","parse","onSubmit","copy","idNum","push","alert","target","map","onClick","App","props","setTripName","newName","setState","tripName","handleChange","date","selectDate","currState","state","showSelectDate","endDate","this","parseInt","selected","showTimeSelect","dateFormat","minDate","trigger","modal","Header","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6706b804.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nfunction Home({name}) {\r\n    return(\r\n        <div className=\"Header\">\r\n            <h1 className=\"trip-name\">{name}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, {useEffect, useState} from 'react';\r\n\r\nfunction SetName({name, setName}) {\r\n\r\n    const handleChange = (e) => {\r\n        setName(e.currentTarget.value)\r\n        localStorage.setItem(\"name\", e.currentTarget.value);\r\n    }\r\n\r\n    return(\r\n        <div className=\"Name\">\r\n            <h1>Name Your Trip:</h1>\r\n            <input className=\"setName\" value={name} type=\"text\" placeholder=\"Enter Name of Trip\" onChange={handleChange}></input>\r\n            <h4>Press esc to exit</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetName;","import React, {useEffect, useState} from \"react\";\r\n\r\nfunction Countdown({tripDate}) {\r\n    \r\n    const [days, setDays] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        \r\n        if (tripDate != null) {\r\n            localStorage.setItem('endDate', tripDate);\r\n        }\r\n       \r\n        const interval = setInterval(() => {\r\n            \r\n            const date = new Date();\r\n            const timeNow = date.getTime();\r\n            const timeDifference = localStorage.getItem('endDate') - timeNow;\r\n            \r\n            const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));\r\n            const hours = Math.floor((timeDifference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\r\n            const minutes = Math.floor((timeDifference % (1000 * 60 * 60) / (1000 * 60)));\r\n            const seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n            \r\n            if (timeDifference < 0 || tripDate == null) {\r\n                setDays(0);\r\n                setHours(0);\r\n                setMinutes(0);\r\n                setSeconds(0);\r\n            } else {\r\n                setDays(days);\r\n                setHours(hours);\r\n                setMinutes(minutes);\r\n                setSeconds(seconds);\r\n            }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, [tripDate]);\r\n\r\n    return(\r\n        <div className=\"countdown\">\r\n             <h1>{days} days : {hours} hours : {minutes} minutes : {seconds} seconds</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countdown;","import React, {useEffect, useState} from 'react';\r\nimport DeleteIcon from '@material-ui/icons/DeleteRounded'\r\n\r\nfunction PackingList() {\r\n\r\n    const packingList = [\r\n        {\r\n            thing : \"phone\", \r\n            id : Number(new Date().getTime()), \r\n            packed : false\r\n        }, \r\n    ];\r\n\r\n    const [item, setItem] = useState(\"\")\r\n    const [list, setList] = useState(packingList);\r\n\r\n    const handleChange = (e) => {\r\n        setItem(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (item !== \"\") {\r\n            let copy = [...list];\r\n            let idNum = Number(new Date().getTime())\r\n            copy.push({thing : item, id : idNum, packed : false});\r\n            setList(copy);\r\n            setItem(\"\");\r\n            localStorage.setItem(\"packingList\", JSON.stringify(copy));\r\n        } else {\r\n            alert(\"please enter a valid item\");\r\n        }\r\n    }\r\n\r\n    // const handleClick = (e) => {\r\n    //     e.preventDefault();\r\n    //     console.log(\"clicked\")\r\n    //     let itemID = e.currentTarget.id;\r\n    //     let updatedList = list.map(item => {\r\n    //         return item.id === Number(itemID) ? {...list, packed: !item.packed} : {...list}\r\n    //     });\r\n    //     setList(updatedList);\r\n    //     console.log(updatedList);\r\n    // }\r\n    const handleClick = (e) => {\r\n        console.log(\"click\")\r\n        e.preventDefault();\r\n        let itemID = e.currentTarget.id;\r\n        console.log(\"ID: \" + itemID);\r\n        let copy = [...list];\r\n        let updatedList = copy.filter(item => {\r\n            return item.id != itemID; \r\n        });\r\n        setList(updatedList);\r\n        localStorage.setItem(\"packingList\", JSON.stringify(updatedList));\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if (localStorage.getItem(\"packingList\") != null) {\r\n            console.log(\"use effect\");\r\n            setList(JSON.parse(localStorage.getItem(\"packingList\")));\r\n        }\r\n    }, []);\r\n    \r\n\r\n    return(\r\n        <div className=\"packing-list\">\r\n\r\n            <h2 className=\"packing-list-header\">THINGS TO PACK:</h2>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input className=\"input-box\" value={item} type=\"text\" onChange={handleChange} placeholder=\"enter item here\"></input>\r\n                <button className=\"input-button\">ADD ITEM</button>\r\n            </form>\r\n\r\n            {/* {list.map(item => <h2  className=\"item\">{item[\"thing\"]}<button id={(item.id)} onClick={handleClick}>remove item</button></h2>)} */}\r\n\r\n            <div className=\"item-container\">\r\n                {list.map(item => <h2  className=\"item\">{item[\"thing\"]}<DeleteIcon className=\"delete-icon\" id={(item.id)} onClick={handleClick}>remove item</DeleteIcon></h2>)}\r\n            </div>\r\n            \r\n\r\n           \r\n\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PackingList;","import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport Header from './Header.js';\nimport SetName from './SetName';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Countdown from './Countdown';\nimport PackingList from './PackingList';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tripName : \"My Trip\",\n      tripDate : null,\n      showSelectDate : false,\n    }\n  }\n\n  setTripName = (newName) => {\n    this.setState({tripName : newName});\n  }\n\n  handleChange = (date) => {\n    this.setState({tripDate : date.getTime()});\n  }\n\n  componentDidMount() {\n    const endDate = localStorage.getItem(\"endDate\");\n\n    if (endDate != null) {\n      this.setState({tripDate : parseInt(endDate)});\n    }\n\n    const name = localStorage.getItem(\"name\");\n\n    if (name != null) {\n      this.setState({tripName : name});\n    }\n  }\n\n  selectDate = () => {\n    let currState = this.state.showSelectDate;\n    this.setState({showSelectDate : !currState});\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        {/* <h4 className=\"setDate\">set trip date: </h4>\n        <DatePicker className=\"setDate\" selected={this.state.tripDate} onChange={this.handleChange} showTimeSelect\n         dateFormat=\"dd/MM/yyyy\" minDate={new Date()}></DatePicker> */}\n        <button onClick={this.selectDate} className=\"date-button\">set trip date</button>\n        {this.state.showSelectDate ? <DatePicker className=\"set-date-button\" selected={this.state.tripDate} onChange={this.handleChange} showTimeSelect\n         dateFormat=\"dd/MM/yyyy\" minDate={new Date()}></DatePicker> : \"\"}\n      \n        \n        <Popup className=\"popup\" trigger={<button className=\"set-name-button\">set trip name</button>} modal>\n          <SetName name={this.state.tripName} setName={this.setTripName}/>\n        </Popup>\n\n        <Header name={this.state.tripName}/>\n        <Countdown tripDate={this.state.tripDate}/>\n        <PackingList />\n      </div>\n    )\n  }\n}\n\n// function App() {\n  \n//   const [tripName, setTripName] = useState(\"My Trip\");\n//   const [tripDate, setTripDate] = useState(null);\n  \n\n//   const handleChange = (date) => {\n//     setTripDate(date.getTime());\n//   }\n\n//   return (\n//     <div className=\"App\">\n      \n//       <h4 className=\"setDate\">set trip date: </h4>\n//       <DatePicker className=\"setDate\" selected={tripDate} onChange={handleChange} showTimeSelect\n//         dateFormat=\"dd/MM/yyyy\" minDate={new Date()}></DatePicker>\n     \n      \n//       <br></br>\n//       <Popup className=\"popup\" trigger={<button>set trip name</button>} modal>\n//         <SetName name={tripName} setName={setTripName}/>\n//       </Popup>\n\n//       <Home name={tripName}/>\n//       <Countdown tripDate={tripDate}/>\n      \n//     </div>\n//   );\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}